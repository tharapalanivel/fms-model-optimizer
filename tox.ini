[tox]
envlist = ruff, lint, spellcheck, unit
minversion = 4.4

[testenv]
description = run tests (unit, unitcov)
extras =
    dev
package = wheel
wheel_build_env = pkg
deps =
    pytest
    pytest-cov
    pytest-html
commands =
    unit: {envpython} -m pytest {posargs:tests}
    unitcov: {envpython} -W error::UserWarning -m pytest --cov=fms_mo --cov-report term --cov-report=html:coverage-{env_name} --cov-report=xml:coverage-{env_name}.xml --html=durations/{env_name}.html {posargs:tests -m "not (examples or slow)"}

[testenv:py3]
basepython = python3.11

[testenv:unit]
basepython = {[testenv:py3]basepython}

[testenv:unitcov]
basepython = {[testenv:py3]basepython}

[testenv:lint]
description = lint with pylint
basepython = {[testenv:py3]basepython}
deps =
    pytest
    pylint>=2.16.2,<4.0
    pylint-pydantic
commands =
    {basepython} -m pylint --load-plugins pylint_pydantic fms_mo/ tests/

[testenv:ruff]
description = lint and format check with ruff
basepython = {[testenv:py3]basepython}
labels = fastverify
skip_install = True
skipsdist = true
# keep in sync with .pre-commit-config.yaml
deps =
    ruff==0.5.0
    isort==5.11.5
commands =
    ruff check .
    ruff format --diff .
    isort --check --diff .

[testenv:fix]
description = reformat and fix violations with ruff
basepython = {[testenv:py3]basepython}
skip_install = True
skipsdist = true
deps = {[testenv:ruff]deps}
commands =
    ruff check {posargs:--fix} .
    ruff format .
    isort .
    isort --check .

[testenv:spellcheck]
description = spell check (needs 'aspell' command)
basepython = {[testenv:py3]basepython}
labels = fastverify
skip_install = true
skipsdist = true
deps =
    pyspelling
commands =
    sh -c 'command -v aspell || (echo "aspell is not installed. Please install it." && exit 1)'
    {envpython} -m pyspelling --config {toxinidir}/.spellcheck.yml --spellchecker aspell
allowlist_externals = sh

[gh]
python =
    3.11 = 3.11-{unitcov}
    3.10 = 3.10-{unitcov}
    3.9 = 3.9-{unitcov}
